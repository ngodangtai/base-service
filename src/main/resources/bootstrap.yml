# app info
info:
  app:
    id: 299
    name: service-base
    description: API for Service Base system
    version: 1.0.1
server:
  http2:
    enabled: true
    max-concurrent-streams: 1000
    max-concurrent-stream-execution: 500
  ssl:
    key-store: /opt/company/cert/company.keystore
    key-store-password: company@123
  port: 8896
  servlet:
    context-path: /service-base
  compression:
    enabled: true
    min-response-size: 1024
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/json;charset=UTF-8

#======================================================================================================
# Management application
#======================================================================================================
management:
  server:
    port: 18896
  endpoints:
    web:
      exposure:
        include: *
  endpoint:
    shutdown:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
  metrics:
    enable:
      all: true
  health:
    db:
      enabled: true
    diskspace:
      enabled: true
      path: .
      threshold: 10485760
    configserver:
      enabled: true
    rabbit:
      enabled: true
    redis:
      enabled: true
    status:
      order: DOWN, OUT_OF_SERVICE, UNKNOWN, UP
  prometheus:
    metrics:
      export:
        enabled: true

spring:
  application:
    name: service-base
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: default
  cloud:
    config:
      enabled: true
      fail-fast: true
      uri: http://apiintsit.company.com.vn/company-config/v1
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 120
          must-revalidate: true
          cache-private: true
          cache-public: true
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss:SSSXXX
    time-zone: GMT+7
    serialization:
      write_dates_as_timestamps: false
  task:
    scheduling:
      pool:
        size: 3
  aop:
    auto: true
    proxy-target-class: true
  jpa:
    properties:
      hibernate:
        order_inserts: true
        jdbc:
          batch_size: 100
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@10.82.71.188:1521/companysit
    username: CASDBSIT
    password: 2QVw4KnhepXYHkC3
    hikari:
      minimum-idle: 10
      maximum-pool-size: 30
      connection-timeout: 5000
      idle-timeout: 300000
      max-lifetime: 900000
      leak-detection-threshold: 300000
#======================================================================================================
# Ehcache
# The location of the configuration file to use to initialize EhCache.
#======================================================================================================
  cache:
    cache-names: EhcacheBase
    jcache:
      config: classpath:ehcache.xml

#======================================================================================================
# JRedis
#======================================================================================================
  data:
    redis:
      host: redis-sit-standalone.company.com.vn
      port: 6379
      password: Q95UGr7ZJG
      database: 3
      jedis:
        pool:
          max-idle: 30
          min-idle: 5
      timeout: 30000
      connect-timeout: 30000
      ttl: 60
      wait-time: 3000
      lease-time: 10000
      default-topic: defaultTopic
#======================================================================================================
# RabbitMQ
#======================================================================================================
  rabbitmq:
    host: sit-rabbitmq-amqp.company.com.vn
    port: 5672
    username: flex
    password: flex
    virtual-host: casflex
    listener:
      simple:
        acknowledge-mode: auto
        maxConcurrency: 5
    template:
      retry:
        enabled: false
        max-attempts: 10
    exchange: vn.company.exchange
    queue:
      test-event:
        name: teams.service-base.test
#======================================================================================================
# KAFKA
#======================================================================================================
  kafka:
    bootstrap-servers: ${ENV_KAFKA_SERVERS:10.82.69.129:9092,10.82.69.237:9092,10.82.69.166:9092}
    properties:
      security:
        protocol: SASL_PLAINTEXT
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${ENV_KAFKA_USERNAME:company_profile} password=${ENV_KAFKA_PASSWORD:vfx2n0CYH1dqIymp};
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringDeserializer
      value-serializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        delivery.timeout.ms: 120000
        request.timeout.ms: 60000
        linger.ms: 10
    consumer:
      group-id: company_profile.group
      enable-auto-commit: true
      auto-offset-reset: latest
      auto-commit-interval: 10
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        max.poll.interval.ms: 300000
        session.timeout.ms: 60000
        request.timeout.ms: 60000
        max.poll.records: 30
    template:
      default-topic: ${ENV_DEFAULT_KAFKA_TOPIC:logs.app}
      error-topic: ${ENV_ERROR_KAFKA_TOPIC:logs.error}
      crit-topic: ${ENV_FATAL_KAFKA_TOPIC:logs.error}
      audit-topic: ${ENV_AUDIT_KAFKA_TOPIC:logs.audit}
    topic:
      test-event: teams.service-base.test
#======================================================================================================
# AMAZON S3
#======================================================================================================
aws:
  region: ap-southeast-1
  bucket-public: company-profile-public-uat

#======================================================================================================
# SECURITY
#======================================================================================================
security:
  public-key: /opt/company/cert/public_key.der
  private-key: /opt/company/cert/private_key.der

#======================================================================================================
# LOGGING
#======================================================================================================
logging:
  kafka:
    enabled: true
  config: classpath:logback-spring.xml
  level:
    org:
      springframework:
        web:
          reactive:
            function:
              client: DEBUG
    com:
      company: DEBUG
logback-kafka-appender:
  config: classpath:logback-spring.xml

#======================================================================================================
# THREAD POOL
#======================================================================================================
thread-pool:
  core-pool-size: 30
  max-pool-size: 100
  queue-capacity: 1000000
  thread-name-prefix: threadPool-
  executor:
    async-task:
      core-pool-size: 5
      max-pool-size: 20
      queue-capacity: 1000000
      thread-name-prefix: asyncTPool-

#======================================================================================================
# SERVICE_URL
#======================================================================================================
service:
  profile:
    url: https://apipub.company.com.vn/profile/v1
api:
  key:
    int: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiAiaHR0cHM6Ly9kYXRhcG93ZXIudGNicy5jb20udm4iLCAic3ViIjogImJvbmQtdHJhZGluZyIsICJpYXQiOiAxNjAyNTc5NzQ0LCAiZXhwIjogMTkxNzkzOTc0NH0.Q5vrMaPio27bplAN83N84Rv1_jVXdWiiG30e3WXJ-2lZfd9fnTWBCD-QrFIMWSOhkxa7l3-Ptwk9eQoIlYq460I0UPqWtxaK6Vl9TaMf16REsGRZduElp7xaDbspzWLYAnnic9fAnMF50VQEeNyHU6LEAvPp8npFrxNlqS2mXERol3ADGKYisH1_8C9UhnKo-4Ga3Inv9pf8QvLIQ-lXjau2qi9_r_H1svBj37xHthLBS4ybtqfdBbYhJuBauWTSotRSoz9dI_A5ojOQPpyGsUiiqT_h1l9Fl0dW7mawjTF51LjeKNT_L4dkFIiqIGqtOghyTH_D0osuhY9h_W-i6Q
    3rd: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiAiaHR0cHM6Ly9kYXRhcG93ZXIudGNicy5jb20udm4iLCAic3ViIjogImJvbmQtdHJhZGluZyIsICJpYXQiOiAxNjAyNTc5NzQ0LCAiZXhwIjogMTkxNzkzOTc0NH0.Q5vrMaPio27bplAN83N84Rv1_jVXdWiiG30e3WXJ-2lZfd9fnTWBCD-QrFIMWSOhkxa7l3-Ptwk9eQoIlYq460I0UPqWtxaK6Vl9TaMf16REsGRZduElp7xaDbspzWLYAnnic9fAnMF50VQEeNyHU6LEAvPp8npFrxNlqS2mXERol3ADGKYisH1_8C9UhnKo-4Ga3Inv9pf8QvLIQ-lXjau2qi9_r_H1svBj37xHthLBS4ybtqfdBbYhJuBauWTSotRSoz9dI_A5ojOQPpyGsUiiqT_h1l9Fl0dW7mawjTF51LjeKNT_L4dkFIiqIGqtOghyTH_D0osuhY9h_W-i6Q